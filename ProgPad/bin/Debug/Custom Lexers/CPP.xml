<?xml version="1.0" encoding="utf-8"?>
<ScintillaNET>
    <Language Name="cpp">

        <Indentation
            TabWidth="4"
            UseTabs="false"
            BackspaceUnindents="true"
            ShowGuides="false"
            SmartIndentType="cpp"
        />

        <Lexer
            LexerName="cpp"
            LineCommentPrefix="//"
            StreamCommentPrefix="/* "
            StreamCommentSuffix=" */">

            <Keywords List="0" Inherit="False">
and and_eq asm auto bitand bitor bool break case catch char class compl const const_cast continue
default delete do double dynamic_cast else enum explicit export extern false float for friend
goto if inline int long mutable namespace new not not_eq operator or or_eq private protected
public register reinterpret_cast return short signed sizeof static static_cast struct switch
template this throw true try typedef typeid typename union unsigned using virtual void volatile
wchar_t while xor xor_eq</Keywords>

        </Lexer>

    </Language>
</ScintillaNET>
